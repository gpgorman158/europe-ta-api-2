{"ast":null,"code":"var _jsxFileName = \"/home/gpgorman/World/Europe/europe-mern/src/Filters.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { countries, latLong } from './global.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Filters(_ref) {\n  _s();\n\n  let {\n    url\n  } = _ref;\n  const [dropdownCountry, setDropdownCountry] = useState(\"\");\n  const [dropdownCity, setDropdownCity] = useState(\"\");\n\n  function handleCountry() {}\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"filter-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      for: \"country\",\n      children: \"Country\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: dropdownCountry,\n      onChange: handleCountry,\n      name: \"country\",\n      id: \"country\",\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        hidden: true,\n        selected: true,\n        children: \"Select a Country...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }, this), countries.map(country => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: country,\n        children: country\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 40\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      for: \"city\",\n      children: \"City\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: dropdownCity,\n      onChange: handleCity,\n      name: \"country\",\n      id: \"country\",\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        hidden: true,\n        selected: true,\n        children: \"Select a City...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }, this), latLong.map(country => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: country.city,\n        children: country.city\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 38\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Filters, \"vcetJsUnY7xVSqu76cLUmE/fpf0=\");\n\n_c = Filters;\nexport default Filters;\n\nvar _c;\n\n$RefreshReg$(_c, \"Filters\");","map":{"version":3,"names":["React","useState","useEffect","countries","latLong","Filters","url","dropdownCountry","setDropdownCountry","dropdownCity","setDropdownCity","handleCountry","map","country","handleCity","city"],"sources":["/home/gpgorman/World/Europe/europe-mern/src/Filters.js"],"sourcesContent":["import React, {useState, useEffect} from 'react'\nimport {countries, latLong} from './global.js'\n\nfunction Filters({url}) {\n\n  const [dropdownCountry, setDropdownCountry] = useState(\"\")\n  const [dropdownCity, setDropdownCity] = useState(\"\")\n\nfunction handleCountry(){\n    \n}\n\n  return (\n    <div className=\"filter-container\">\n        <label for=\"country\">Country</label>\n        <select value={dropdownCountry} onChange={handleCountry} name=\"country\" id=\"country\">\n            <option hidden selected>Select a Country...</option>\n            {countries.map( country => <option value={country}>{country}</option>)}\n        </select>\n        <br></br>\n        <label for=\"city\">City</label>\n        <select value={dropdownCity} onChange={handleCity} name=\"country\" id=\"country\">\n            <option hidden selected>Select a City...</option>\n            {latLong.map( country => <option value={country.city}>{country.city}</option>)}\n        </select>\n    </div>\n  );\n}\n\nexport default Filters;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAAQC,SAAR,EAAmBC,OAAnB,QAAiC,aAAjC;;;AAEA,SAASC,OAAT,OAAwB;EAAA;;EAAA,IAAP;IAACC;EAAD,CAAO;EAEtB,MAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCP,QAAQ,CAAC,EAAD,CAAtD;EACA,MAAM,CAACQ,YAAD,EAAeC,eAAf,IAAkCT,QAAQ,CAAC,EAAD,CAAhD;;EAEF,SAASU,aAAT,GAAwB,CAEvB;;EAEC,oBACE;IAAK,SAAS,EAAC,kBAAf;IAAA,wBACI;MAAO,GAAG,EAAC,SAAX;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI;MAAQ,KAAK,EAAEJ,eAAf;MAAgC,QAAQ,EAAEI,aAA1C;MAAyD,IAAI,EAAC,SAA9D;MAAwE,EAAE,EAAC,SAA3E;MAAA,wBACI;QAAQ,MAAM,MAAd;QAAe,QAAQ,MAAvB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,EAEKR,SAAS,CAACS,GAAV,CAAeC,OAAO,iBAAI;QAAQ,KAAK,EAAEA,OAAf;QAAA,UAAyBA;MAAzB;QAAA;QAAA;QAAA;MAAA,QAA1B,CAFL;IAAA;MAAA;MAAA;MAAA;IAAA,QAFJ,eAMI;MAAA;MAAA;MAAA;IAAA,QANJ,eAOI;MAAO,GAAG,EAAC,MAAX;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAPJ,eAQI;MAAQ,KAAK,EAAEJ,YAAf;MAA6B,QAAQ,EAAEK,UAAvC;MAAmD,IAAI,EAAC,SAAxD;MAAkE,EAAE,EAAC,SAArE;MAAA,wBACI;QAAQ,MAAM,MAAd;QAAe,QAAQ,MAAvB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,EAEKV,OAAO,CAACQ,GAAR,CAAaC,OAAO,iBAAI;QAAQ,KAAK,EAAEA,OAAO,CAACE,IAAvB;QAAA,UAA8BF,OAAO,CAACE;MAAtC;QAAA;QAAA;QAAA;MAAA,QAAxB,CAFL;IAAA;MAAA;MAAA;MAAA;IAAA,QARJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAeD;;GAxBQV,O;;KAAAA,O;AA0BT,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}